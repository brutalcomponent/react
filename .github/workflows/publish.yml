name: Publish

on:
  push:
    tags:
      - "v*"
      - "release(*)" # optional: also allow tags like release(0.1.2)

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Show ref
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

      - name: Normalize version from tag
        id: version
        shell: bash
        run: |
          RAW="${GITHUB_REF_NAME}"
          if [[ "$RAW" == v* ]]; then
            VER="${RAW#v}"
          elif [[ "$RAW" == release(*) ]]; then
            VER="${RAW#release(}"; VER="${VER%)}"
          else
            echo "Unsupported tag: $RAW"; exit 1
          fi

          DISTTAG="latest"
          case "$VER" in
            *-dev* )   DISTTAG="dev" ;;
            *-rc*  )   DISTTAG="rc" ;;
            *-beta*)   DISTTAG="beta" ;;
            *-alpha*)  DISTTAG="alpha" ;;
          esac

          echo "version=$VER"  >> $GITHUB_OUTPUT
          echo "disttag=$DISTTAG" >> $GITHUB_OUTPUT
          echo "Resolved version=$VER, dist-tag=$DISTTAG"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Verify version matches tag
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ steps.version.outputs.version }}"
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "package.json ($PKG_VERSION) != tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag "${{ steps.version.outputs.disttag }}"
