name: Publish

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # optional: npm provenance

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Determine dist-tag
        id: tag
        run: |
          TAG="${GITHUB_REF_NAME}"           # e.g. v0.2.0-dev or v0.2.0
          VER="${TAG#v}"
          DISTTAG="latest"

          case "$VER" in
            *-dev*)   DISTTAG="dev" ;;
            *-rc*)    DISTTAG="rc" ;;
            *-beta*)  DISTTAG="beta" ;;
            *-alpha*) DISTTAG="alpha" ;;
          esac

          # Optional check: package.json version must match tag version (without v)
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [ "$PKG_VERSION" != "$VER" ]; then
            echo "package.json version ($PKG_VERSION) does not match tag ($VER)"
            exit 1
          fi

          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "disttag=$DISTTAG" >> $GITHUB_OUTPUT

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Publishing version ${{ steps.tag.outputs.version }} with dist-tag ${{ steps.tag.outputs.disttag }}"
          npm publish --access public --tag "${{ steps.tag.outputs.disttag }}"
